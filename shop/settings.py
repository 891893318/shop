"""
Django settings for shop project.

Generated by 'django-admin startproject' using Django 5.0.1.

For more information on this file, see
https://docs.djangoproject.com/en/5.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.0/ref/settings/
"""
import os
from pathlib import Path



# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

AUTH_USER_MODEL = 'users.User'

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-3u$5zt+^t0k+!px+74t9qu_zt($-u+k9&-0v-=x24ynh*-&(l^'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []

# Application definition
import sys

sys.path.insert(0, os.path.join(BASE_DIR, "apps"))
INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    "apps.users",
    "apps.contents",
    "apps.verifications",

]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'shop.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, "templates")]
        ,
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'shop.wsgi.application'

# Database
# https://docs.djangoproject.com/en/5.0/ref/settings/#databases

DATABASES = {
    "default": {
        "ENGINE": "django.db.backends.mysql",
        "NAME": "shop",
        "USER": "J8820LONG",
        "PASSWORD": "Jiang20011010...",
        "HOST": "8.130.96.131",
        "PORT": "3306",
    }
}

# redis 缓存  redis默认16个 0~15
CACHES = {
    "default": {
        "BACKEND": "django_redis.cache.RedisCache",
        "LOCATION": "redis://127.0.0.1:6379/0",
        "OPTIONS": {
            "CLIENT_CLASS": "django_redis.client.DefaultClient",
        }
    },
    # 保存session信息
    "session": {
        "BACKEND": "django_redis.cache.RedisCache",
        "LOCATION": "redis://127.0.0.1:6379/1",
        "OPTIONS": {
            "CLIENT_CLASS": "django_redis.client.DefaultClient",
        }
    },
    # 保存验证码信息
    "verification": {
        "BACKEND": "django_redis.cache.RedisCache",
        "LOCATION": "redis://127.0.0.1:6379/2",
        "OPTIONS": {
            "CLIENT_CLASS": "django_redis.client.DefaultClient",
        }
    }
}

SESSION_ENGINE = "django.contrib.sessions.backends.cache"
SESSION_CACHE_ALIAS = "session"

# Password validation
# https://docs.djangoproject.com/en/5.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# Internationalization
# https://docs.djangoproject.com/en/5.0/topics/i18n/

LANGUAGE_CODE = 'zh-hans'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.0/howto/static-files/

# 指定加载静态文件的路由器前缀
STATIC_URL = '/static/'
STATICFILES_DIRS = [
    os.path.join(BASE_DIR, "static/")
]

# Default primary key field type
# https://docs.djangoproject.com/en/5.0/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# 日志
# 基本配置，可以复用的
# LOGGING = {
#     "version": 1,
#     "disable_existing_loggers": False,  # 禁用已经存在的logger实例
#
#     "formatters": {  # 定义了两种日志格式
#         "verbose": {  # 详细
#             "format": "%(levelness)s %(asctime)s %(module)s %(lineno)d %(message)s"
#
#         },
#         'simple': {  # 简单
#             'format': '%(levelname)s %(module)s %(lineno)d %(message)s'
#         },
#     },
#
#     "handlers": {  # 定义了三种日志处理方式
#         "console": {  # 打印到终端console
#             "level": "INFO",
#             "filters": ["require_debug_true"],
#             "class": "logging.StreamHandler",
#             "formatter": "simple",
#         },
#         'file': {  # 对INFO级别以上信息以日志文件形式保存
#             'level': "INFO",
#             'class': 'logging.handlers.RotatingFileHandler',  # 滚动生成日志，切割
#             'filename': os.path.join(BASE_DIR, 'logs/shop.log'),  # 日志文件名
#             'maxBytes': 300 * 1024 * 1024,  # 单个日志文件最大为10M
#             'backupCount': 10,  # 日志备份文件最大数量
#             'formatter': 'verbose',  # 简单格式
#             'encoding': 'utf-8',  # 放置中文乱码
#         },
#
#     },
#
#     "loggers": {
#         "django": {
#             "handlers": ["console", "file"],
#             "propagate": True,  # 向不向更高级别的logger传递
#             "level": "INFO",  # 级别
#
#         },
#     },
# }

# 邮件相关配置
EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'  # 发送邮件配置
EMAIL_HOST = 'smtp.qq.com'  # 服务器名称
EMAIL_PORT = 25  # 服务端口
EMAIL_HOST_USER = '730347390@qq.com'  # 填写自己邮箱
EMAIL_HOST_PASSWORD = 'jzgxefevbtuxbfhh'  # 在邮箱中设置的客户端授权密码
EMAIL_FROM = '蒋**'  # 收件人看到的发件人
DEFAULT_FROM_EMAIL = EMAIL_HOST_USER
EMAIL_USE_TLS = True  # 是否使用TLS安全传输协议
# EMAIL_USE_SSL = True    #是否使用SSL加密，qq企业邮箱要求使用
# 与SMTP服务器通信时, 是否启动TLS连接(安全连接), 默认为False
EMAIL_USE_TLS = False  # 使用 True 可能发送不成功, 所以这里使用 False

